name: Build and Publish

on:
  release:
    types:
      - created
  push:
  pull_request:

jobs:

  java_build:
    name: Build Jar

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

      - name: Build with Gradle
        run: ./gradlew clean build :service:jacocoTestReport --refresh-dependencies -PartifactVersion=$VERSION

      - name: Upload Service Artifact
        uses: actions/upload-artifact@v2
        with:
          name: service
          path: service/build/libs/*.jar
        # if: github.event_name == 'release'

  docker_build:
    name: Build and Push to Docker Registry
    needs: java_build

    runs-on: ubuntu-latest

    # if: github.event_name == 'release'

    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          if [[ "$VERSION" == "dev" || "$VERSION" == "main" ]]; then
              VERSION=latest
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV

          TAGS=$VERSION

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download Service Artifact
        uses: actions/download-artifact@v2
        with:
          name: service
          path: service/build/libs

      - name: Build and push service docker
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile-service
          context: .
          push: true
          tags: radialtheory/digital-currency-consortium-service:${{ steps.prep.outputs.tags }}

      - name: Build and push database docker
        uses: docker/build-push-action@v2
        if: env.VERSION == 'latest'
        with:
          file: docker/Dockerfile-database
          context: .
          push: true
          tags: radialtheory/digital-currency-consortium-database:latest
